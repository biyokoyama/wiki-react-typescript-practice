{"version":3,"sources":["logo.png","history/index.ts","store/searchForm.ts","components/SearchForm.tsx","components/Navbar.tsx","components/Footer.tsx","views/index.tsx","axios/mock/_data/articles.ts","axios/mock/api/articles/_id.ts","axios/mock/api/articles.ts","axios/mock.ts","axios/index.ts","classes/article.ts","components/SearchedArticles.tsx","views/search.tsx","components/ArticleContent.tsx","views/articles/_id.tsx","App.tsx","reportWebVitals.ts","index/fontawesome.ts","store/index.ts","index.tsx"],"names":["history","createBrowserHistory","basename","initialQuery","URLSearchParams","location","search","get","SET_SEARCH_FORM_QUERY","initialState","query","SearchForm","useHistory","dispatch","useDispatch","searchFormState","useSelector","state","searchForm","useState","searchInputState","setSearchInputState","className","value","onChange","event","target","onClick","type","payload","push","Wrapper","styled","nav","Navbar","to","src","logo","width","height","path","exact","footer","Footer","href","rel","icon","indexView","articles","id","title","body","apiArticlesIdRegexp","getArticleIdFromUrl","url","matched","match","parseInt","findArticleById","articleId","find","article","apiArticlesRegexp","mockRoutes","mockAdapter","onGet","reply","config","onPut","articleContentFormData","JSON","parse","data","urlSearchParams","getQueryFromUrl","filter","includes","instance","axios","create","baseURL","MockAdapter","delayResponse","forEach","mockRoute","mock","ArticleEntity","this","div","SearchedArticles","props","map","searchView","articlesState","setArticlesState","useEffect","then","response","articleData","ArticleContent","isEditing","setIsEditing","initialArticleContentForm","articleContentForm","setArticleContentForm","placeholder","saveArticleContentForm","articlesIdView","params","useParams","initialArticleState","articleState","setArticleState","put","App","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","fab","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2862b66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e32fe965.png\";","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory({\n  basename: process.env.REACT_APP_IS_GH_PAGES\n    ? \"/wiki-react-typescript-practice/\"\n    : \"/\",\n});\nexport default history;\n","import history from \"../history\";\n\n/**\n * history\n */\nconst initialQuery =\n  new URLSearchParams(history.location.search).get(\"q\") || \"\";\n\n/**\n * state\n */\ntype SearchFormState = {\n  query: string;\n};\n\n/**\n * actions\n */\nconst SET_SEARCH_FORM_QUERY = \"SET_SEARCH_FORM_QUERY\" as const;\ntype SearchFormAction = {\n  type: string;\n  payload: {\n    query: string;\n  };\n};\nexport const setSearchFormQueryAction = (query: string): SearchFormAction => ({\n  type: SET_SEARCH_FORM_QUERY,\n  payload: {\n    query,\n  },\n});\n\n/**\n * reducer\n */\nconst initialState: SearchFormState = {\n  query: initialQuery,\n};\nexport const searchFormReducer = (\n  state = initialState,\n  action: SearchFormAction\n): SearchFormState => {\n  switch (action.type) {\n    case SET_SEARCH_FORM_QUERY:\n      return {\n        ...state,\n        query: action.payload.query,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../store/index\";\nimport { setSearchFormQueryAction } from \"../store/searchForm\";\n\nconst SearchForm: React.FC = () => {\n  /**\n   * hooks\n   */\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  /**\n   * store state\n   */\n  const searchFormState = useSelector((state: RootState) => {\n    return state.searchForm;\n  });\n\n  /**\n   * local state\n   */\n  const [searchInputState, setSearchInputState] = useState(\n    searchFormState.query\n  );\n\n  /**\n   * handlers\n   */\n  const handleChangeSearchInputState = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    setSearchInputState(event.target.value);\n  };\n\n  const handleClickSearchButton = (): void => {\n    dispatch(setSearchFormQueryAction(searchInputState));\n    history.push(`/search?q=${searchInputState}`);\n  };\n\n  /**\n   * template\n   */\n  return (\n    <div className=\"field has-addons has-addons-centered\">\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          value={searchInputState}\n          onChange={handleChangeSearchInputState}\n        />\n      </div>\n      <div className=\"control\">\n        <button className=\"button is-primary\" onClick={handleClickSearchButton}>\n          Search\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport logo from \"../logo.png\";\nimport SearchForm from \"./SearchForm\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.nav`\n  .navbar__title {\n    margin-left: 1rem;\n  }\n  .navbar__item-search-form {\n    width: 85%;\n  }\n`;\n\nconst Navbar: React.FC = () => {\n  return (\n    <Wrapper className=\"navbar is-light\">\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"navbar-item\">\n          <span className=\"image is-24x24\">\n            <img className=\"is-rounded\" src={logo} width=\"24\" height=\"24\" />\n          </span>\n        </Link>\n        <Switch>\n          1\n          <Route path=\"/\" exact />\n          <Route>\n            <div className=\"navbar__item-search-form navbar-item\">\n              <SearchForm />\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.footer`\n  padding: 3rem;\n`;\n\nconst Footer: React.FC = () => {\n  return (\n    <Wrapper className=\"footer has-background-light\">\n      <div className=\"field is-grouped is-grouped-centered\">\n        <p className=\"control\">©︎2020 biyokoyama</p>\n        <p className=\"control\">\n          <a\n            href=\"https://github.com/biyokoyama/wiki-react-typescript-practice\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"button is-small\"\n          >\n            <FontAwesomeIcon className=\"icon\" icon={[\"fab\", \"github\"]} />\n            <span>Github</span>\n          </a>\n        </p>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport SearchForm from \"../components/SearchForm\";\n\nconst indexView: React.FC = () => {\n  return (\n    <div className=\"index\">\n      <section className=\"hero is-light is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1 className=\"title\">wiki-react-typescript-practice</h1>\n            <SearchForm />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default indexView;\n","import { ArticleData } from \"../../../types/article\";\n\nexport const articles: ArticleData[] = [\n  {\n    id: 1001,\n    title: \"サンプル記事1タイトル\",\n    body: \"サンプル記事1本文\\n本文\\n本文本文\\n本文本文本文\",\n  },\n  {\n    id: 1002,\n    title: \"サンプル記事2タイトル\",\n    body: \"サンプル記事2本文\\n本文\\n本文本文\\n本文本文本文\",\n  },\n  {\n    id: 1003,\n    title: \"サンプル記事3タイトル\",\n    body: \"サンプル記事3本文\\n本文\\n本文本文\\n本文本文本文\",\n  },\n];\n","import { AxiosRequestConfig } from \"axios\";\nimport { ArticleContentFormData, ArticleData } from \"../../../../types/article\";\nimport { mockRoute } from \"../../../mock\";\nimport { articles } from \"../../_data/articles\";\n\nconst apiArticlesIdRegexp = /\\/api\\/articles\\/(\\d+)/;\nconst getArticleIdFromUrl = (url: string): number | null => {\n  const matched = url.match(apiArticlesIdRegexp);\n  return matched ? parseInt(matched[1]) : null;\n};\nconst findArticleById = (articleId: number): ArticleData | null => {\n  return (\n    articles.find((article: ArticleData) => {\n      return article.id === articleId;\n    }) || null\n  );\n};\n\nexport const mockApiArticlesIdGet: mockRoute = (mockAdapter) => {\n  mockAdapter.onGet(apiArticlesIdRegexp).reply((config: AxiosRequestConfig) => {\n    const articleId = getArticleIdFromUrl(`${config.url}`);\n    const article: ArticleData | null = articleId\n      ? findArticleById(articleId)\n      : null;\n\n    if (!article) return [404];\n\n    return [200, article];\n  });\n};\n\nexport const mockApiArticlesIdPut: mockRoute = (mockAdapter) => {\n  mockAdapter.onPut(apiArticlesIdRegexp).reply((config: AxiosRequestConfig) => {\n    const articleId = getArticleIdFromUrl(`${config.url}`);\n    const article: ArticleData | null = articleId\n      ? findArticleById(articleId)\n      : null;\n\n    if (!article) return [404];\n\n    const articleContentFormData: ArticleContentFormData = JSON.parse(\n      config.data\n    );\n    article.title = articleContentFormData.title;\n    article.body = articleContentFormData.body;\n\n    return [200];\n  });\n};\n","import { AxiosRequestConfig } from \"axios\";\nimport { ArticleData } from \"../../../types/article\";\nimport { mockRoute } from \"../../mock\";\nimport { articles } from \"../_data/articles\";\n\nconst apiArticlesRegexp = /\\/api\\/articles(\\?.*)?/;\nconst getQueryFromUrl = (url: string): string => {\n  const matched = url.match(apiArticlesRegexp);\n  const urlSearchParams = matched ? new URLSearchParams(matched[1]) : null;\n  return urlSearchParams ? urlSearchParams.get(\"q\") || \"\" : \"\";\n};\n\nexport const mockApiArticlesGet: mockRoute = (mockAdapter) => {\n  mockAdapter.onGet(apiArticlesRegexp).reply((config: AxiosRequestConfig) => {\n    const query = getQueryFromUrl(`${config.url}`);\n    return [\n      200,\n      articles.filter((article: ArticleData) => {\n        return article.title.includes(query) || article.body.includes(query);\n      }),\n    ];\n  });\n};\n","import { AxiosInstance } from \"axios\";\nimport MockAdapter from \"axios-mock-adapter\";\n\n// mockRoutes\nimport {\n  mockApiArticlesIdGet,\n  mockApiArticlesIdPut,\n} from \"./mock/api/articles/_id\";\nimport { mockApiArticlesGet } from \"./mock/api/articles\";\n// ...\n\nexport type mockRoute = (mockAdapter: MockAdapter) => void;\nconst mockRoutes: mockRoute[] = [\n  mockApiArticlesIdGet,\n  mockApiArticlesIdPut,\n  mockApiArticlesGet,\n  // ... 先勝ちなので順番に注意\n];\n\nexport const mock = (instance: AxiosInstance): void => {\n  const mockAdapter = new MockAdapter(instance, { delayResponse: 500 });\n  mockRoutes.forEach((mockRoute: mockRoute) => {\n    mockRoute(mockAdapter);\n  });\n};\n","import axios from \"axios\";\nimport { mock } from \"./mock\";\n\nconst instance = axios.create({\n  baseURL: \"/\",\n});\n\nif (\n  process.env.NODE_ENV === \"development\" ||\n  process.env.REACT_APP_IS_GH_PAGES\n) {\n  mock(instance);\n}\n\nexport default instance;\n","import { ArticleData } from \"../types/article\";\n\n/**\n * ArticleEntity\n */\nexport class ArticleEntity {\n  private data: ArticleData;\n\n  constructor(data: ArticleData) {\n    this.data = data;\n  }\n\n  get id(): number {\n    return this.data.id;\n  }\n\n  get path(): string {\n    return `/articles/${this.id}`;\n  }\n\n  get title(): string {\n    return this.data.title;\n  }\n\n  get body(): string {\n    return this.data.body;\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ArticleEntity } from \"../classes/article\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  articles: ArticleEntity[];\n};\n\nconst Wrapper = styled.div`\n  .box:hover {\n    box-shadow: 0 10px 16px rgba(0, 0, 0, 0.13), 0 6px 6px rgba(0, 0, 0, 0.19);\n    transition: 0.5s;\n  }\n`;\n\nconst SearchedArticles: React.FC<Props> = (props: Props) => {\n  return (\n    <Wrapper className=\"searched-articles section\">\n      <div className=\"container\">\n        <div className=\"content\">\n          {props.articles.map((article) => {\n            return (\n              <Link key={article.id} to={article.path} className=\"box\">\n                <p className=\"subtitle\">{article.title}</p>\n                <p>{article.body}</p>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default SearchedArticles;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"../axios\";\nimport { RootState } from \"../store\";\nimport { ArticleData } from \"../types/article\";\nimport { ArticleEntity } from \"../classes/article\";\nimport SearchedArticles from \"../components/SearchedArticles\";\n\nconst searchView: React.FC = () => {\n  /**\n   * store state\n   */\n  const searchFormState = useSelector((state: RootState) => {\n    return state.searchForm;\n  });\n\n  /**\n   * local state\n   */\n  const initialArticlesState: ArticleEntity[] = [];\n  const [articlesState, setArticlesState] = useState(initialArticlesState);\n\n  useEffect(() => {\n    axios.get(`/api/articles?q=${searchFormState.query}`).then((response) => {\n      setArticlesState(\n        response.data.map(\n          (articleData: ArticleData) => new ArticleEntity(articleData)\n        )\n      );\n    });\n  }, [searchFormState]);\n\n  return (\n    <div className=\"search has-background-light\">\n      <SearchedArticles articles={articlesState} />\n    </div>\n  );\n};\n\nexport default searchView;\n","import React, { useState } from \"react\";\nimport { ArticleEntity } from \"../classes/article\";\nimport {\n  ArticleContentFormData,\n  SaveArticleContentForm,\n} from \"../types/article\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  .article-content__body-paragraph {\n    white-space: pre-wrap;\n  }\n`;\n\ntype Props = {\n  article: ArticleEntity;\n  saveArticleContentForm: SaveArticleContentForm;\n};\n\nconst ArticleContent: React.FC<Props> = (props: Props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const initialArticleContentForm: ArticleContentFormData = {\n    title: \"\",\n    body: \"\",\n  };\n  const [articleContentForm, setArticleContentForm] = useState(\n    initialArticleContentForm\n  );\n\n  const handleChangeArticleContentFormTitle = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    setArticleContentForm({\n      ...articleContentForm,\n      title: event.target.value,\n    });\n  };\n\n  const handleChangeArticleContentFormBody = (\n    event: React.ChangeEvent<HTMLTextAreaElement>\n  ): void => {\n    setArticleContentForm({\n      ...articleContentForm,\n      body: event.target.value,\n    });\n  };\n\n  const handleClickEdit = (): void => {\n    setArticleContentForm({\n      title: props.article.title,\n      body: props.article.body,\n    });\n    setIsEditing(!isEditing);\n  };\n\n  const handleClickSave = (): void => {\n    props.saveArticleContentForm(articleContentForm);\n    setIsEditing(!isEditing);\n  };\n\n  const handleClickCancel = (): void => {\n    setArticleContentForm(initialArticleContentForm);\n    setIsEditing(!isEditing);\n  };\n\n  return (\n    <Wrapper className=\"article-content content\">\n      <div className=\"field is-grouped\">\n        <div className=\"control is-expanded\">\n          {!isEditing && <h1 className=\"title\">{props.article.title}</h1>}\n          {isEditing && (\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"title here\"\n              value={articleContentForm.title}\n              onChange={handleChangeArticleContentFormTitle}\n            />\n          )}\n        </div>\n        <div className=\"control\">\n          <div className=\"buttons is-right\">\n            {!isEditing && (\n              <button className=\"button\" onClick={handleClickEdit}>\n                Edit\n              </button>\n            )}\n            {isEditing && (\n              <button className=\"button is-primary\" onClick={handleClickSave}>\n                Save\n              </button>\n            )}\n            {isEditing && (\n              <button className=\"button\" onClick={handleClickCancel}>\n                Cancel\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          {!isEditing && (\n            <p className=\"article-content__body-paragraph\">\n              {props.article.body}\n            </p>\n          )}\n          {isEditing && (\n            <textarea\n              className=\"textarea has-fixed-size\"\n              placeholder=\"body here\"\n              value={articleContentForm.body}\n              onChange={handleChangeArticleContentFormBody}\n            ></textarea>\n          )}\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default ArticleContent;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"../../axios\";\nimport { ArticleEntity } from \"../../classes/article\";\nimport ArticleContent from \"../../components/ArticleContent\";\nimport { SaveArticleContentForm } from \"../../types/article\";\n\nconst articlesIdView: React.FC = () => {\n  type Params = {\n    id: string;\n  };\n  const params = useParams<Params>();\n\n  const articleId = parseInt(params.id);\n  const initialArticleState = new ArticleEntity({\n    id: articleId,\n    title: \"\",\n    body: \"\",\n  });\n  const [articleState, setArticleState] = useState(initialArticleState);\n\n  useEffect(() => {\n    axios.get(`/api/articles/${articleId}`).then((response) => {\n      setArticleState(new ArticleEntity(response.data));\n    });\n  }, []);\n\n  const saveArticleContentForm: SaveArticleContentForm = (\n    articleContentFormData\n  ) => {\n    axios.put(`/api/articles/${articleId}`, articleContentFormData).then(() => {\n      setArticleState(\n        new ArticleEntity({\n          id: articleId,\n          ...articleContentFormData,\n        })\n      );\n    });\n  };\n\n  return (\n    <div className=\"articles-id\">\n      <div className=\"section\">\n        <div className=\"container\">\n          <ArticleContent\n            article={articleState}\n            saveArticleContentForm={saveArticleContentForm}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default articlesIdView;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport indexView from \"./views\";\nimport searchView from \"./views/search\";\nimport articlesIdView from \"./views/articles/_id\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n\n  & > div {\n    flex: 1;\n  }\n`;\n\nconst App: React.FC = () => {\n  return (\n    <Wrapper id=\"app\" className=\"app\">\n      <BrowserRouter>\n        <Navbar />\n        <Route exact path=\"/\" component={indexView} />\n        <Route exact path=\"/search\" component={searchView} />\n        <Route exact path=\"/articles/:id\" component={articlesIdView} />\n        <Footer />\n      </BrowserRouter>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nlibrary.add(fab);\n","import { combineReducers, createStore } from \"redux\";\nimport { searchFormReducer } from \"./searchForm\";\n\nexport const rootReducer = combineReducers({\n  searchForm: searchFormReducer,\n});\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(rootReducer);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index/fontawesome.ts\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nimport history from \"./history/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}